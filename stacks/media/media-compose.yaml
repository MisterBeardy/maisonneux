version: "3.9"
services:
  # Sonarr
  sonarr:
    image: ghcr.io/linuxserver/sonarr:develop
    container_name: sonarr
    networks:
      proxy_network:
        ipv4_address: 172.18.1.101
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${CONFIG_FOLDER}/transmission/torrentfiles:/watch
      - ${DISK_ROOT}:/data  # Official documentation recommends a single mapping for both downloads and media directories
      - ${CONFIG_FOLDER}/sonarr:/config
    ports:
      - 8989:8989/tcp # Web interface
    environment:
      - PUID=${USERID}
      - PGID=${GROUPID}
    healthcheck:
      test: ["CMD", "curl", "-sf", "http://localhost:8989/ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    labels:
      - "traefik.enable=true"
      # Router for UI
      # - "traefik.http.routers.sonarr-rtr.rule=Host(`media.${DOMAIN_NAME}`) && PathPrefix(`/tv`)" # And don't forget to add the subfolder option in sonarr
      - "traefik.http.routers.sonarr-rtr.rule=Host(`tv.${DOMAIN_NAME}`)" 
      - "traefik.http.routers.sonarr-rtr.entrypoints=websecure"
      - "traefik.http.routers.sonarr-rtr.priority=99"
      - "traefik.http.routers.sonarr-rtr.tls=true"
      # - "traefik.http.routers.sonarr-rtr.tls.certresolver=letsencrypt"
      - "traefik.http.routers.sonarr-rtr.tls.options=tls-opts@file"
      # Router for API
      # - "traefik.http.routers.sonarr-api-rtr.rule=Host(`media.${DOMAIN_NAME}`) && PathPrefix(`/tv`) && (Headers(`X-Api-Key`, `${SONARR_API_KEY}`) || Query(`apikey`, `${SONARR_API_KEY}`))"
      - "traefik.http.routers.sonarr-api-rtr.rule=Host(`tv.${DOMAIN_NAME}`) && (Headers(`X-Api-Key`, `${SONARR_API_KEY}`) || Query(`apikey`, `${SONARR_API_KEY}`))"
      - "traefik.http.routers.sonarr-api-rtr.entrypoints=websecure"
      - "traefik.http.routers.sonarr-api-rtr.priority=100"
      - "traefik.http.routers.sonarr-api-rtr.tls=true"
      # - "traefik.http.routers.sonarr-api-rtr.tls.certresolver=letsencrypt"
      - "traefik.http.routers.sonarr-api-rtr.tls.options=tls-opts@file"
      # Middleware
      - "traefik.http.routers.sonarr-rtr.middlewares=chain-forwardauth-plex@docker,sonarr-theme@docker"
      - "traefik.http.routers.sonarr-api-rtr.middlewares=chain-noauth@docker"
      # Service
      - "traefik.http.routers.sonarr-rtr.service=sonarr-svc"
      - "traefik.http.routers.sonarr-api-rtr.service=sonarr-svc"
      - "traefik.http.services.sonarr-svc.loadbalancer.server.port=8989"
      # - "traefik.http.services.sonarr-svc.loadbalancer.passHostHeader=true"
      # Homepage config
      - "homepage.group=Media"
      - "homepage.weight=10"
      - "homepage.name=Sonarr"
      - "homepage.icon=sonarr.png"
      - "homepage.href=https://tv.${DOMAIN_NAME}"
      - "homepage.description=TV series management"
      - "homepage.widget.type=sonarr"
      - "homepage.widget.url=http://sonarr:8989"
      - "homepage.widget.key=${SONARR_API_KEY}"
    restart: unless-stopped
  # Radarr
  radarr:
    image: ghcr.io/linuxserver/radarr:nightly
    container_name: radarr
    networks:
      proxy_network:
        ipv4_address: 172.18.1.102
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${CONFIG_FOLDER}/transmission/torrentfiles:/watch
      - ${DISK_ROOT}:/movies
      - ${CONFIG_FOLDER}/radarr:/config
    ports:
      - 7878:7878/tcp # Web interface
    environment:
      - PUID=${USERID}
      - PGID=${GROUPID}
    healthcheck:
      test: ["CMD", "curl", "-sf", "http://localhost:7878/ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    labels:
      - "traefik.enable=true"
      # Router for UI
      # - "traefik.http.routers.radarr-rtr.rule=Host(`media.${DOMAIN_NAME}`) && PathPrefix(`/movies`)"
      - "traefik.http.routers.radarr-rtr.rule=Host(`movies.${DOMAIN_NAME}`)"
      - "traefik.http.routers.radarr-rtr.entrypoints=websecure"
      - "traefik.http.routers.radarr-rtr.priority=99"
      - "traefik.http.routers.radarr-rtr.tls=true"
      # - "traefik.http.routers.radarr-rtr.tls.certresolver=letsencrypt"
      - "traefik.http.routers.radarr-rtr.tls.options=tls-opts@file"
      # Router for API
      # - "traefik.http.routers.radarr-api-rtr.rule=Host(`media.${DOMAIN_NAME}`) && PathPrefix(`/movies`) && (Headers(`X-Api-Key`, `${RADARR_API_KEY}`) || Query(`apikey`, `${RADARR_API_KEY}`))"
      - "traefik.http.routers.radarr-api-rtr.rule=Host(`movies.${DOMAIN_NAME}`) && (Headers(`X-Api-Key`, `${RADARR_API_KEY}`) || Query(`apikey`, `${RADARR_API_KEY}`))"
      - "traefik.http.routers.radarr-api-rtr.entrypoints=websecure"
      - "traefik.http.routers.radarr-api-rtr.priority=100"
      - "traefik.http.routers.radarr-api-rtr.tls=true"
      # - "traefik.http.routers.radarr-api-rtr.tls.certresolver=letsencrypt"
      - "traefik.http.routers.radarr-api-rtr.tls.options=tls-opts@file"
      # Middleware
      - "traefik.http.routers.radarr-rtr.middlewares=chain-forwardauth-plex@docker,radarr-theme@docker"
      - "traefik.http.routers.radarr-api-rtr.middlewares=chain-noauth@docker"
      # Service
      - "traefik.http.routers.radarr-rtr.service=radarr-svc"
      - "traefik.http.routers.radarr-api-rtr.service=radarr-svc"
      - "traefik.http.services.radarr-svc.loadbalancer.server.port=7878"
    restart: unless-stopped
  # Radarr for 4K movies
  radarr4k:
    image: ghcr.io/linuxserver/radarr:nightly
    container_name: radarr4k
    networks:
      proxy_network:
        ipv4_address: 172.18.1.103
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${CONFIG_FOLDER}/transmission/torrentfiles:/watch
      - ${DISK_ROOT}:/movies
      - ${CONFIG_FOLDER}/radarr4k:/config
    ports:
      - 7879:7878/tcp # Web interface
    environment:
      - PUID=${USERID}
      - PGID=${GROUPID}
    healthcheck:
      test: ["CMD", "curl", "-sf", "http://localhost:7878/ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    labels:
      - "traefik.enable=true"
      # Router for UI
      # - "traefik.http.routers.radarr4k-rtr.rule=Host(`media.${DOMAIN_NAME}`) && PathPrefix(`/4kmovies`)"
      - "traefik.http.routers.radarr4k-rtr.rule=Host(`movies4k.${DOMAIN_NAME}`)"
      - "traefik.http.routers.radarr4k-rtr.entrypoints=websecure"
      - "traefik.http.routers.radarr4k-rtr.priority=99"
      - "traefik.http.routers.radarr4k-rtr.tls=true"
      # - "traefik.http.routers.radarr4k-rtr.tls.certresolver=letsencrypt"
      - "traefik.http.routers.radarr4k-rtr.tls.options=tls-opts@file"
      # Router for API
      # - "traefik.http.routers.radarr4k-api-rtr.rule=Host(`media.${DOMAIN_NAME}`) && PathPrefix(`/4kmovies`) && (Headers(`X-Api-Key`, `${RADARR4K_API_KEY}`) || Query(`apikey`, `${RADARR4K_API_KEY}`))"
      - "traefik.http.routers.radarr4k-api-rtr.rule=Host(`movies4k.${DOMAIN_NAME}`) && (Headers(`X-Api-Key`, `${RADARR4K_API_KEY}`) || Query(`apikey`, `${RADARR4K_API_KEY}`))"
      - "traefik.http.routers.radarr4k-api-rtr.entrypoints=websecure"
      - "traefik.http.routers.radarr4k-api-rtr.priority=100"
      - "traefik.http.routers.radarr4k-api-rtr.tls=true"
      # - "traefik.http.routers.radarr4k-api-rtr.tls.certresolver=letsencrypt"
      - "traefik.http.routers.radarr4k-api-rtr.tls.options=tls-opts@file"
      # Middleware
      - "traefik.http.routers.radarr4k-rtr.middlewares=chain-forwardauth-plex@docker,radarr-theme@docker"
      - "traefik.http.routers.radarr4k-api-rtr.middlewares=chain-noauth@docker"
      # Service
      - "traefik.http.routers.radarr4k-rtr.service=radarr4k-svc"
      - "traefik.http.routers.radarr4k-api-rtr.service=radarr4k-svc"
      - "traefik.http.services.radarr4k-svc.loadbalancer.server.port=7878"
      # Homepage config
      - "homepage.group=Media"
      - "homepage.weight=12"
      - "homepage.name=Radarr 4K"
      - "homepage.icon=radarr.png"
      - "homepage.href=https://movies4k.${DOMAIN_NAME}"
      - "homepage.description=4K movies management"
      - "homepage.widget.type=radarr"
      - "homepage.widget.url=http://radarr4k:7878"
      - "homepage.widget.key=${RADARR4K_API_KEY}"
    restart: unless-stopped
  # Lidarr
  lidarr:
    image: ghcr.io/linuxserver/lidarr:nightly
    container_name: lidarr
    networks:
      proxy_network:
        ipv4_address: 172.18.1.104
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DISK_ROOT}:/music
      - ${CONFIG_FOLDER}/lidarr:/config
    ports:
      - 8686:8686/tcp # Web interface
    environment:
      - PUID=${USERID}
      - PGID=${GROUPID}
    healthcheck:
      test: ["CMD", "curl", "-sf", "http://localhost:8686/ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    labels:
      - "traefik.enable=true"
      # Router for UI
      # - "traefik.http.routers.lidarr-rtr.rule=Host(`media.${DOMAIN_NAME}`) && PathPrefix(`/music`)"
      - "traefik.http.routers.lidarr-rtr.rule=Host(`music.${DOMAIN_NAME}`)"
      - "traefik.http.routers.lidarr-rtr.entrypoints=websecure"
      - "traefik.http.routers.lidarr-rtr.priority=99"
      - "traefik.http.routers.lidarr-rtr.tls=true"
      # - "traefik.http.routers.lidarr-rtr.tls.certresolver=letsencrypt"
      - "traefik.http.routers.lidarr-rtr.tls.options=tls-opts@file"
      # Router for API
      # - "traefik.http.routers.lidarr-api-rtr.rule=Host(`media.${DOMAIN_NAME}`) && PathPrefix(`/music`) && (Headers(`X-Api-Key`, `${LIDARR_API_KEY}`) || Query(`apikey`, `${LIDARR_API_KEY}`))"
      - "traefik.http.routers.lidarr-api-rtr.rule=Host(`music.${DOMAIN_NAME}`) && (Headers(`X-Api-Key`, `${LIDARR_API_KEY}`) || Query(`apikey`, `${LIDARR_API_KEY}`))"
      - "traefik.http.routers.lidarr-api-rtr.entrypoints=websecure"
      - "traefik.http.routers.lidarr-api-rtr.priority=100"
      - "traefik.http.routers.lidarr-api-rtr.tls=true"
      # - "traefik.http.routers.lidarr-api-rtr.tls.certresolver=letsencrypt"
      - "traefik.http.routers.lidarr-api-rtr.tls.options=tls-opts@file"
      # Middleware
      - "traefik.http.routers.lidarr-rtr.middlewares=chain-forwardauth-plex@docker,lidarr-theme@docker"
      - "traefik.http.routers.lidarr-api-rtr.middlewares=chain-noauth@docker"
      # Service
      - "traefik.http.routers.lidarr-rtr.service=lidarr-svc"
      - "traefik.http.routers.lidarr-api-rtr.service=lidarr-svc"
      - "traefik.http.services.lidarr-svc.loadbalancer.server.port=8686"
      # Homepage config
      - "homepage.group=Media"
      - "homepage.weight=13"
      - "homepage.name=Lidarr"
      - "homepage.icon=lidarr.png"
      - "homepage.href=https://music.${DOMAIN_NAME}"
      - "homepage.description=Music management"
      - "homepage.widget.type=lidarr"
      - "homepage.widget.url=http://lidarr:8686"
      - "homepage.widget.key=${LIDARR_API_KEY}"
    restart: unless-stopped
# tatulli for plex stats
  tautulli:
    image: ghcr.io/tautulli/tautulli:latest
    container_name: tautulli
    networks:
      proxy_network:
        ipv4_address: 172.18.1.109
    volumes:
      - ${CONFIG_FOLDER}/tautulli:/config
      - /etc/localtime:/etc/localtime:ro
      - ${PLEX_LOGS_FOLDER}:/plex_logs:ro
    ports:
      - 8181:8181/tcp
    environment:
      - PUID=${USERID}
      - PGID=${GROUPID}
      - TZ=${TIMEZONE}
    labels:
      - "traefik.enable=true"
      ## HTTP Router
      - "traefik.http.routers.tautulli-rtr.entrypoints=websecure"
      - "traefik.http.routers.tautulli-rtr.rule=Host(`tautulli.${DOMAIN_NAME}`)"
      - "traefik.http.routers.tautulli-rtr.priority=99"
      - "traefik.http.routers.tautulli-rtr.tls=true"
      # - "traefik.http.routers.tautulli-rtr.tls.certresolver=letsencrypt"
      - "traefik.http.routers.tautulli-rtr.tls.options=tls-opts@file"
      ## API HTTP Router
      - "traefik.http.routers.tautulli-api-rtr.entrypoints=websecure"
      - "traefik.http.routers.tautulli-api-rtr.rule=Host(`tautulli.${DOMAIN_NAME}`) && PathPrefix(`/api/v2`)"
      - "traefik.http.routers.tautulli-api-rtr.priority=100"
      - "traefik.http.routers.tautulli-api-rtr.tls=true"
      # - "traefik.http.routers.tautulli-api-rtr.tls.certresolver=letsencrypt"
      - "traefik.http.routers.tautulli-api-rtr.tls.options=tls-opts@file"
      ## Middlewares
      - "traefik.http.routers.tautulli-rtr.middlewares=chain-forwardauth-plex@docker,tautulli-theme@docker"
      - "traefik.http.routers.tautulli-api-rtr.middlewares=tautulli-theme@docker"
      ## HTTP Services
      - "traefik.http.routers.tautulli-rtr.service=tautulli-svc"
      - "traefik.http.routers.tautulli-api-rtr.service=tautulli-svc"
      - "traefik.http.services.tautulli-svc.loadbalancer.server.port=8181"
      # Homepage config
      - "homepage.group=Media"
      - "homepage.weight=5"
      - "homepage.name=Tautulli"
      - "homepage.icon=tautulli.png"
      - "homepage.href=https://tautulli.${DOMAIN_NAME}"
      - "homepage.description=Plex monitoring"
      - "homepage.widget.type=tautulli"
      - "homepage.widget.url=http://tautulli:8181"
      - "homepage.widget.key=${TAUTULLI_API_KEY}"
    restart: unless-stopped
  # Overseerr - User content suggestions and requests for Plex
  overseerr:
    image: sctx/overseerr:latest
    container_name: overseerr
    networks:
      proxy_network:
        ipv4_address: 172.18.1.110
    volumes:
      - ${CONFIG_FOLDER}/overseerr:/app/config
    ports:
      - 5055:5055/tcp
    environment:
      - TZ=${TIMEZONE}
    healthcheck:
      test: ["CMD", "wget", "http://localhost:5055/api/v1/status", "-qO", "/dev/null"]  
      interval: 30s
      timeout: 10s
      retries: 5
    labels:
      - "traefik.enable=true"
      ## HTTP Router
      - "traefik.http.routers.overseerr-rtr.entrypoints=websecure"
      - "traefik.http.routers.overseerr-rtr.rule=Host(`request.${DOMAIN_NAME}`)"
      - "traefik.http.routers.overseerr-rtr.tls=true"
      # - "traefik.http.routers.overseerr-rtr.tls.certresolver=letsencrypt"
      - "traefik.http.routers.overseerr-rtr.tls.options=tls-opts@file"
      ## Middlewares
      - "traefik.http.routers.overseerr-rtr.middlewares=chain-forwardauth-plex@docker"
      ## HTTP Services
      - "traefik.http.routers.overseerr-rtr.service=overseerr-svc"
      - "traefik.http.services.overseerr-svc.loadbalancer.server.port=5055"
      # Homepage config
      - "homepage.group=Media"
      - "homepage.weight=15"
      - "homepage.name=Overseerr"
      - "homepage.icon=overseerr.png"
      - "homepage.href=https://request.${DOMAIN_NAME}"
      - "homepage.description=Media requesting"
      - "homepage.widget.type=overseerr"
      - "homepage.widget.url=http://overseerr:5055"
      - "homepage.widget.key=${OVERSEERR_API_KEY}"
    restart: unless-stopped
    # sabnzbd
  sabnzbd:
    image: image: ghcr.io/hotio/sabnzbd:latest
    container_name: sabnzbd
    networks:
      proxy_network:
        ipv4_address: 172.18.1.101
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DISK_ROOT}/usenet:/data/usenet:rw  # Official documentation recommends a single mapping for both downloads and media directories
      - ${CONFIG_FOLDER}/sabnzbd:/config
    ports:
      - 8080:8080
      - 9090:9090 # Web interface
    environment:
      - PUID=${USERID}
      - PGID=${GROUPID}
    healthcheck:
      test: ["CMD", "curl", "-sf", "http://localhost:8989/ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    labels:
      - "traefik.enable=true"
      # Router for UI
      # - "traefik.http.routers.sabnzbd-rtr.rule=Host(`media.${DOMAIN_NAME}`) && PathPrefix(`/download`)" # And don't forget to add the subfolder option in sabnzbd
      - "traefik.http.routers.sabnzbd-rtr.rule=Host(`download.${DOMAIN_NAME}`)" 
      - "traefik.http.routers.sabnzbd-rtr.entrypoints=websecure"
      - "traefik.http.routers.sabnzbd-rtr.priority=99"
      - "traefik.http.routers.sabnzbd-rtr.tls=true"
      # - "traefik.http.routers.sabnzbd-rtr.tls.certresolver=letsencrypt"
      - "traefik.http.routers.sabnzbd-rtr.tls.options=tls-opts@file"
      # Router for API
      # - "traefik.http.routers.sabnzbd-api-rtr.rule=Host(`media.${DOMAIN_NAME}`) && PathPrefix(`/download`) && (Headers(`X-Api-Key`, `${sabnzbd_API_KEY}`) || Query(`apikey`, `${sabnzbd_API_KEY}`))"
      - "traefik.http.routers.sabnzbd-api-rtr.rule=Host(`download.${DOMAIN_NAME}`) && (Headers(`X-Api-Key`, `${sabnzbd_API_KEY}`) || Query(`apikey`, `${sabnzbd_API_KEY}`))"
      - "traefik.http.routers.sabnzbd-api-rtr.entrypoints=websecure"
      - "traefik.http.routers.sabnzbd-api-rtr.priority=100"
      - "traefik.http.routers.sabnzbd-api-rtr.tls=true"
      # - "traefik.http.routers.sabnzbd-api-rtr.tls.certresolver=letsencrypt"
      - "traefik.http.routers.sabnzbd-api-rtr.tls.options=tls-opts@file"
      # Middleware
      - "traefik.http.routers.sabnzbd-rtr.middlewares=chain-forwardauth-plex@docker,sabnzbd-theme@docker"
      - "traefik.http.routers.sabnzbd-api-rtr.middlewares=chain-noauth@docker"
      # Service
      - "traefik.http.routers.sabnzbd-rtr.service=sabnzbd-svc"
      - "traefik.http.routers.sabnzbd-api-rtr.service=sabnzbd-svc"
      - "traefik.http.services.sabnzbd-svc.loadbalancer.server.port=8080"
      # - "traefik.http.services.sabnzbd-svc.loadbalancer.passHostHeader=true"
      # Homepage config
      - "homepage.group=Media"
      - "homepage.weight=10"
      - "homepage.name=sabnzbd"
      - "homepage.icon=sabnzbd.png"
      - "homepage.href=https://download.${DOMAIN_NAME}"
      - "homepage.description=download series management"
      - "homepage.widget.type=sabnzbd"
      - "homepage.widget.url=http://sabnzbd:8080"
      - "homepage.widget.key=${sabnzbd_API_KEY}"
    restart: unless-stopped
networks:
  proxy_network:
    external: true  # Created in the nginx compose
  mangatagger_network:
    external: true
  kaizoku_network:
    external: true